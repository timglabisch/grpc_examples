<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: hello.proto
//   Date: 2016-10-03 13:46:47

namespace hello {

  class WeatherRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $location = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'hello.WeatherRequest');

      // OPTIONAL STRING location = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "location";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <location> has a value
     *
     * @return boolean
     */
    public function hasLocation(){
      return $this->_has(1);
    }
    
    /**
     * Clear <location> value
     *
     * @return \hello\WeatherRequest
     */
    public function clearLocation(){
      return $this->_clear(1);
    }
    
    /**
     * Get <location> value
     *
     * @return string
     */
    public function getLocation(){
      return $this->_get(1);
    }
    
    /**
     * Set <location> value
     *
     * @param string $value
     * @return \hello\WeatherRequest
     */
    public function setLocation( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace hello {

  class WeatherResponse extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $temperature = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'hello.WeatherResponse');

      // OPTIONAL INT32 temperature = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "temperature";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <temperature> has a value
     *
     * @return boolean
     */
    public function hasTemperature(){
      return $this->_has(1);
    }
    
    /**
     * Clear <temperature> value
     *
     * @return \hello\WeatherResponse
     */
    public function clearTemperature(){
      return $this->_clear(1);
    }
    
    /**
     * Get <temperature> value
     *
     * @return int
     */
    public function getTemperature(){
      return $this->_get(1);
    }
    
    /**
     * Set <temperature> value
     *
     * @param int $value
     * @return \hello\WeatherResponse
     */
    public function setTemperature( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace hello {

  class WeatherClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param hello\WeatherRequest $input
     */
    public function getWeather(\hello\WeatherRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/hello.Weather/getWeather', $argument, '\hello\WeatherResponse::deserialize', $metadata, $options);
    }
  }
}
